{"ast":null,"code":"import _defineProperty from \"/home/rubenberna/code/Redcarrots/EasyLife/Quitter-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/rubenberna/code/Redcarrots/EasyLife/Quitter-app/client/src/components/form/Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { Form, Transition } from 'semantic-ui-react';\nimport './form.scss';\nimport UiDivider from '../divider/Divider';\nimport Intro from '../intro/Intro';\n\nclass FinalForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formVisible: true,\n      msgVisible: false,\n      canBeSubmitted: true\n    };\n\n    this.handleChange = (name, e) => {\n      const change = {};\n      let inputValue = e.target.value;\n      if (name === 'voornaam' || name === 'naam') inputValue = inputValue.charAt(0).toUpperCase() + inputValue.slice(1);\n      change[name] = inputValue;\n      this.setState(_objectSpread({}, change));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            naam = _this$state.naam,\n            voornaam = _this$state.voornaam,\n            email = _this$state.email,\n            telefoonummer = _this$state.telefoonummer,\n            adres = _this$state.adres,\n            reason = _this$state.reason,\n            comments = _this$state.comments;\n      const cancellationData = {\n        naam,\n        voornaam,\n        email,\n        telefoonummer,\n        adres,\n        reason,\n        comments\n      };\n      this.validateForm(cancellationData);\n    };\n\n    this.validateForm = cancellationData => {\n      let change = {};\n      const canBeSubmitted = this.state.canBeSubmitted; // 1. Check if all fields have an input\n\n      for (let key in cancellationData) {\n        let value = cancellationData[key];\n\n        if (value === undefined || value === '' || value === 'error') {\n          change[key] = 'error'; // canBeSubmitted = false\n\n          this.setState(_objectSpread({}, change, {\n            canBeSubmitted: false\n          }));\n        }\n      } // 2. Regex email\n\n\n      if (cancellationData.email) {\n        if (this.verifyEmail(cancellationData.email) === false) {\n          this.setState({\n            email: 'error',\n            canBeSubmitted: false\n          }); // canBeSubmitted = false\n        }\n      } // 3. Submit form\n      // if (canBeSubmitted) {\n      //   this.props.sendData(cancellationData)\n      //   this.props.toggleFormVisibility()\n      // }\n\n    };\n\n    this.clearError = key => {\n      const change = {};\n      change[key] = '';\n      this.setState(_objectSpread({}, change));\n    };\n\n    this.verifyEmail = email => {\n      const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\n      if (email.match(mailformat)) return true;else return false;\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          voornaam = _this$state2.voornaam,\n          naam = _this$state2.naam,\n          email = _this$state2.email,\n          telefoonummer = _this$state2.telefoonummer,\n          adres = _this$state2.adres,\n          comments = _this$state2.comments;\n    const formVisible = this.props.formVisible;\n    return React.createElement(React.Fragment, null, React.createElement(Transition, {\n      visible: formVisible,\n      animation: \"fade\",\n      duration: 1500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"final-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Intro, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(UiDivider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Naam\",\n      placeholder: \"Naam\",\n      onChange: e => this.handleChange('naam', e),\n      error: naam === 'error',\n      onFocus: e => this.clearError('naam'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Voornaam\",\n      placeholder: \"Voornaam\",\n      onChange: e => this.handleChange('voornaam', e),\n      error: voornaam === 'error',\n      onFocus: e => this.clearError('voornaam'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"E-mail\",\n      placeholder: \"E-mail\",\n      onChange: e => this.handleChange('email', e),\n      error: email === 'error' && {\n        content: 'Wrong email format',\n        pointing: 'above'\n      },\n      onFocus: e => this.clearError('email'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Telefoonnummer\",\n      placeholder: \"Telefoonnummer\",\n      onChange: e => this.handleChange('telefoonummer', e),\n      error: telefoonummer === 'error',\n      onFocus: e => this.clearError('telefoonummer'),\n      type: \"number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      widths: \"equal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      fluid: true,\n      label: \"Adres\",\n      placeholder: \"Adres\",\n      onChange: e => this.handleChange('adres', e),\n      error: adres === 'error',\n      onFocus: e => this.clearError('adres'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(Form.TextArea, {\n      label: \"Comments\",\n      placeholder: \"Tell us more about what could we do differently...\",\n      onChange: e => this.handleChange('comments', e),\n      error: comments === 'error',\n      onFocus: e => this.clearError('comments'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Form.Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default FinalForm;","map":{"version":3,"sources":["/home/rubenberna/code/Redcarrots/EasyLife/Quitter-app/client/src/components/form/Form.js"],"names":["React","Component","Form","Transition","UiDivider","Intro","FinalForm","state","formVisible","msgVisible","canBeSubmitted","handleChange","name","e","change","inputValue","target","value","charAt","toUpperCase","slice","setState","handleSubmit","preventDefault","naam","voornaam","email","telefoonummer","adres","reason","comments","cancellationData","validateForm","key","undefined","verifyEmail","clearError","mailformat","match","render","props","content","pointing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Transition } from 'semantic-ui-react'\n\nimport './form.scss'\nimport UiDivider from '../divider/Divider'\nimport Intro from '../intro/Intro'\n\nclass FinalForm extends Component {\n  state = {\n    formVisible: true,\n    msgVisible: false,\n    canBeSubmitted: true\n  }\n\n  handleChange = (name, e) => {\n    const change = {}\n    let inputValue = e.target.value\n    if (name === 'voornaam' || name === 'naam') inputValue = inputValue.charAt(0).toUpperCase() + inputValue.slice(1)\n    change[name] = inputValue\n    this.setState({ ...change })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { naam, voornaam, email, telefoonummer, adres, reason, comments } = this.state\n    const cancellationData = {\n      naam,\n      voornaam,\n      email,\n      telefoonummer,\n      adres,\n      reason,\n      comments\n    }\n    this.validateForm(cancellationData)\n  }\n\n  validateForm = (cancellationData) => {\n    \n    let change = {}\n    const { canBeSubmitted } = this.state\n\n    // 1. Check if all fields have an input\n    for (let key in cancellationData) {\n      let value = cancellationData[key]\n      if (value === undefined || value === '' || value === 'error') {\n        change[key] = 'error'\n        // canBeSubmitted = false\n        this.setState({ \n          ...change,\n          canBeSubmitted: false\n        })\n      }\n    }\n\n    // 2. Regex email\n    if (cancellationData.email) {\n      if (this.verifyEmail(cancellationData.email) === false) {\n        this.setState({ \n          email: 'error',\n          canBeSubmitted: false\n        })\n        // canBeSubmitted = false\n      }\n    }\n\n    // 3. Submit form\n    // if (canBeSubmitted) {\n    //   this.props.sendData(cancellationData)\n    //   this.props.toggleFormVisibility()\n    // }\n  }\n\n  clearError = (key) => {\n    const change = {}\n    change[key] = ''\n    this.setState({ ...change })\n  }\n\n  verifyEmail = (email) => {\n    const mailformat = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/\n    if (email.match(mailformat)) return true;\n    else return false;\n  }\n\n  \n\n  render() {\n    const { voornaam, naam, email, telefoonummer, adres, comments } = this.state\n    const { formVisible } = this.props\n    return (\n      <>\n        <Transition \n          visible={formVisible} \n          animation='fade' \n          duration={1500}>\n          <div className='final-form'>\n            <Intro/>\n            <UiDivider/>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group widths='equal'>\n                <Form.Input \n                  fluid label='Naam' \n                  placeholder='Naam' \n                  onChange={e => this.handleChange('naam', e)} \n                  error={naam === 'error'} \n                  onFocus={e => this.clearError('naam')}\n                />\n                <Form.Input \n                  fluid label='Voornaam' \n                  placeholder='Voornaam' \n                  onChange={e => this.handleChange('voornaam', e)} \n                  error={voornaam === 'error'} \n                  onFocus={e => this.clearError('voornaam')}\n                />\n              </Form.Group>\n              <Form.Group widths='equal'>\n                <Form.Input\n                  fluid label='E-mail' \n                  placeholder='E-mail' \n                  onChange={e => this.handleChange('email', e)} \n                  error={email === 'error' && { content: 'Wrong email format', pointing: 'above'}} \n                  onFocus={e => this.clearError('email')}\n                />\n                <Form.Input \n                  fluid label='Telefoonnummer' \n                  placeholder='Telefoonnummer' \n                  onChange={e => this.handleChange('telefoonummer', e)} \n                  error={telefoonummer === 'error'} \n                  onFocus={e => this.clearError('telefoonummer')}\n                  type='number'\n                />\n              </Form.Group>\n              <Form.Group widths='equal'>\n                <Form.Input \n                  fluid label='Adres' \n                  placeholder='Adres' \n                  onChange={e => this.handleChange('adres', e)} \n                  error={adres === 'error'} \n                  onFocus={e => this.clearError('adres')}\n                />\n              </Form.Group>\n              <Form.TextArea \n                label='Comments' \n                placeholder='Tell us more about what could we do differently...' \n                onChange={e => this.handleChange('comments', e)} \n                error={comments === 'error'} \n                onFocus={e => this.clearError('comments')}\n              />\n              <Form.Button>Submit</Form.Button>\n            </Form>\n          </div>\n        </Transition>\n      </>\n    )\n  }\n}\n\nexport default FinalForm\n"]},"metadata":{},"sourceType":"module"}